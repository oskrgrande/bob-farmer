export const es = {
  errors: {
    unauthorized: 'You are unauthorized for this action',
    invalidPayload: 'No se pudieron guardar los cambios. Campos no completados correctamente.',
    forbidden: 'You do not have permissions to perform this action',
    emptyToken: 'Necesitas un token para solicitar este endpoint',
    invalidToken: 'Proporcionaste un token no válido',
    duplicateEmail: 'Username or Email are already taken',
    hashedPassword: 'Your password cannot contain more than three times the symbol `$`',
    confirmPassword: 'Confirm password does not match',
    oldPassword: 'Old password does not match',
    missingData: 'Missing "data" payload in the request body',
    missingEntityId: 'Missing id property on entities',
    missingIds: 'Missing "ids" paylod in the request query',
    notFound: '%s with id %s not found',
    routeNotFound: 'La ruta %s no existe',
    notImplemented: 'Not Implemented',
    missingEnvVariables: 'Variables de entorno de definidas',
    notOwner: 'You don\'t have permissions to manage %s that doesn\'t belong to you',
    badAnswer: 'Current answer `%s` is not allowed',
    wrongDataType: 'data property for bulk operations must be array',
    wrongIdsType: 'ids property for bulk operations must be array',
    entityWithIdNotFound: 'Entidad %s con id %s no encontrada',
    entityNotFound: 'Entity %s not found',
    recordNotFound: 'Record not found',
    relatedEntities: 'Cannot delete and entity with relations',
    customError: 'Oh no, this is embarrasing. We are having troubles my friend',
    tokenExpired: 'Your token has expired',
    checkPrivileges: 'Check Privileges',
    notFoundPrivileges: 'You not found PRIVILEGES',
    methodNotsupported: 'http methos is not supported',
    errorTry: 'Ha ocurrido un inconveniente, intentelo de nuevo más tarde.',
    expectedObject: 'Datos invalidos. Se esperaba un objeto.',
    expectedArray: 'Datos invalidos. Se esperaba un arreglo.',
    prismaError: 'Ocurrio un error con relacionado con prisma',
    emptyDueDiligenceAsnwer: 'Usuario no posee debida diligencia',
    emptyApiKey: 'Necesitas un api-key para solicitar este endpoint',
    invalidApiKey: 'Proporcionaste un api-key no válido',
    pool: {
      initialization: 'failed to initialized pool',
    },
  },
  generic: {
    messageDataDefault: 'Los datos solicitados han sido entregados correctamente.',
    notFoundInfo: 'No se encontraron registros de %s',
    updateInfo: 'Se actualizo correctamente',
    deleteInfo: 'Se removio correctamente',
    createSuccess: 'Se ha creado correctamente el registro de %s',
    uploadFileSuccess: 'Se cargo correctamente %s',
  },
  schema: {
    require_column: 'El campo %s es requerido.',
    structure_column: 'El %s debe ser un %s.',
  },
}
